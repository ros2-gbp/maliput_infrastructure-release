name: gcc-workspace-build

on:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron:  '0 9 * * *' # 9:00am UTC, 1:00am PST.

env:
  PACKAGE_NAME: maliput_infrastructure
  ROS_DISTRO: foxy
  ROS_WS: maliput_ws
  # We want zero interaction while installing or upgrading the system via apt.
  # It accepts the default answer for all questions.
  DEBIAN_FRONTEND: noninteractive

jobs:
  compile_and_test:
    name: Verify workspace set up
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.04
    steps:
    - uses: actions/checkout@v2
      with:
        path: ${{ env.ROS_WS }}/src/${{ env.PACKAGE_NAME }}
    - name: install dependencies
      shell: bash
      working-directory: ${{ env.ROS_WS }}/src
      run: ./${PACKAGE_NAME}/tools/install_dependencies.sh
    # clone public dependencies
    - name: vcs import
      shell: bash
      working-directory: ${{ env.ROS_WS }}
      run: vcs import src < src/${PACKAGE_NAME}/.github/dependencies.repos
    - name: check if dependencies have a matching branch
      shell: bash
      working-directory: ${{ env.ROS_WS }}/src
      run: ./${PACKAGE_NAME}/.github/try_vcs_checkout ${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}} .
    - run: colcon graph
      shell: bash
      working-directory: ${{ env.ROS_WS }}
    - name: rosdep install
      shell: bash
      working-directory: ${{ env.ROS_WS }}
      run: |
        rosdep update --include-eol-distros;
        rosdep install  -i -y --rosdistro ${ROS_DISTRO} --skip-keys "pybind11" --from-paths src
    - name: install drake
      shell: bash
      working-directory: ${{ env.ROS_WS }}/src/drake_vendor
      run: ./drake_installer
    - name: colcon build libraries
      shell: bash
      working-directory: ${{ env.ROS_WS }}
      run: |
        . /opt/ros/${ROS_DISTRO}/setup.bash;
        colcon build --event-handlers=console_direct+
