name: clang

on:
  pull_request:
    types: [labeled]
  workflow_dispatch:
  schedule:
    - cron:  '0 9 * * 1' # 9:00am UTC, 1:00am PST every Monday.

env:
  PACKAGE_NAME: maliput_infrastructure
  ROS_DISTRO: foxy
  ROS_WS: maliput_ws
  UBSAN_OPTIONS: halt_on_error=1

jobs:
  compile_and_test:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'do-clang-test') || github.event_name == 'schedule' }}
    name: Compile and test with sanitizer
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.04
    strategy:
      matrix:
        sanitizer: [none, asan, ubsan]
        include:
          - sanitizer: none
            COMPILER_FLAG: ''
          - sanitizer: asan
            COMPILER_FLAG: ' -DADDRESS_SANITIZER=On'
          - sanitizer: ubsan
            COMPILER_FLAG: ' -DUNDEFINED_SANITIZER=On'
    env:
      CC: clang-8
      CXX: clang++-8
      LDFLAGS: -fuse-ld=lld-8
    steps:
    # setup-ros first since it installs git, which is needed to fetch all branches from actions/checkout
    - uses: ros-tooling/setup-ros@0.2.1
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    - uses: actions/checkout@v2
      with:
        path: ${{ env.ROS_WS }}/src/${{ env.PACKAGE_NAME }}
    - name: clang 8 install
      shell: bash
      working-directory: ${{ env.ROS_WS }}/src
      run: ./${PACKAGE_NAME}/.github/clang_suite_installation.sh
    # clone public dependencies
    - name: vcs import
      shell: bash
      working-directory: ${{ env.ROS_WS }}
      run: vcs import src < src/${PACKAGE_NAME}/.github/dependencies.repos
    - name: check if dependencies have a matching branch
      shell: bash
      working-directory: ${{ env.ROS_WS }}/src
      run: ./${PACKAGE_NAME}/.github/try_vcs_checkout ${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}} .
    - run: colcon graph
      shell: bash
      working-directory: ${{ env.ROS_WS }}
    - name: rosdep install
      shell: bash
      working-directory: ${{ env.ROS_WS }}
      run: |
        rosdep update --include-eol-distros;
        rosdep install  -i -y --rosdistro ${ROS_DISTRO} --skip-keys "pybind11" --from-paths src
    - name: install drake
      shell: bash
      working-directory: ${{ env.ROS_WS }}/src/drake_vendor
      run: ./drake_installer
    - name: colcon build libraries
      shell: bash
      working-directory: ${{ env.ROS_WS }}
      run: |
        . /opt/ros/${ROS_DISTRO}/setup.bash;
        colcon build --event-handlers=console_direct+ \
          --cmake-args ${COMPILER_FLAG}
    - name: colcon test
      shell: bash
      working-directory: ${{ env.ROS_WS }}
      run: |
        . install/setup.bash;
        colcon test --event-handlers=console_direct+;
        colcon test-result --verbose;
